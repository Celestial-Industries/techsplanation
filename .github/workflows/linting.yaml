# comment for forcing change
name: linting

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manually execute Tests'
  push:
    branches:
      - "*"
      - "**/*"
    paths:
      - 'src/*.py'

  pull_request:
    types:
      [opened, reopened]
    branches:
      - master

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PYTHON_VERSION: "3.8"
  DIR: "./src/"

jobs:
  lintAll:
    name: lint non master branches
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        working-directory: src
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Black
        id: black
        run: |
          black ${DIR}
        continue-on-error: true

      - name: Pylint
        id: pylint
        run: |
          pylint ${DIR}
        continue-on-error: true

      - name: mypy
        id:  mypy
        run: |
          mypy ${DIR}
        continue-on-error: true

      - name: bandit
        id: bandit
        run: |
          bandit -r ${DIR}
        continue-on-error: true

      - name: pydocstyle
        id: pydocstyle
        run: |
          pydocstyle ${DIR}
        continue-on-error: true

      - name: isort
        id: isort
        run: |
          isort ${DIR}
        continue-on-error: true

      - name: Failure notification for non master
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubactions_notifications'
        # For conitune on error and sending notification for lints
        if: cancelled() || failure() || steps.black.outcome == 'failure' || steps.pylint.outcome == 'failure' || steps.mypy.outcome == 'failure' || steps.bandit.outcome == 'failure' || steps.pydocstyle.outcome == 'failure' || steps.isort.outcome == 'failure'

  lintMaster:
    name: lint master
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        working-directory: src
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Black
        id: black
        run: |
          black ${DIR}

      - name: Pylint
        id: pylint
        run: |
          pylint ${DIR}

      - name: mypy
        id:  mypy
        run: |
          mypy ${DIR}

      - name: bandit
        id: bandit
        run: |
          bandit -r ${DIR}

      - name: pydocstyle
        id: pydocstyle
        run: |
          pydocstyle ${DIR}

      - name: isort
        id: isort
        run: |
          isort ${DIR}

      - name: Failure notification for non master
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubactions_notifications'
        if: cancelled() || failure()
